{"version":3,"sources":["store/prizeStore.js","style/Overlay/overlay.js","components/overlay/Overlay.jsx","components/overlay/utils/getCurrentPrize.js","style/Points/points.js","components/points/Points.jsx","store/questionsStore.js","style/Questions/questions.js","components/questions/Questions.jsx","style/MainView/mainView.js","views/main-view/MainView.jsx","App.js","reportWebVitals.js","index.js"],"names":["prizeStore","min","max","url","text","altText","OverlayContainerMask","styled","div","OverlayContainer","OverlayTitle","p","OverlayPoints","winner","OverlayResetButton","button","OverlayImage","img","OverlayText","Overlay","gameState","points","currPrize","imgList","filter","getCurrentPrize","src","alt","onClick","window","location","reload","PointsText","Points","questionsStore","title","answers","correctAnswerIndex","QuestionsContainer","QuestionsTitle","h2","QuestionsWrapper","ul","QuestionsItem","li","QuestionButton","QuestionsListLength","Questions","setPointsClick","setSlideClick","slideIndex","setBackgroundColor","questionsList","map","index","answer","i","setTimeout","length","onAnswerClick","MainViewContainer","color","MainView","useState","currPoints","setPoints","currSlide","setSlide","setGameState","isWinner","setIsWinner","backgroundColor","maxLength","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f05a91e6.chunk.js","sourcesContent":["export const pointsPerQuestion = 100;\n\nexport const prizeStore = [\n  {\n    min: 1,\n    max: 200,\n    url: false, // Here you can add a link e.g. 'https://image-src.com' or '/images/local-image.jpg'\n    text: 'Congratulations you won 3rd prize!',\n    altText: 'alt text'\n  },\n  {\n    min: 201,\n    max: 400,\n    url: false, // Here you can add a link e.g. 'https://image-src.com' or '/images/local-image.jpg'\n    text: 'Congratulations you won 2nd prize!',\n    altText: 'alt text'\n  },\n  {\n    min: 401,\n    max: 600,\n    url: false, // Here you can add a link e.g. 'https://image-src.com' or '/images/local-image.jpg'\n    text: 'Congratulations you won 1st prize!',\n    altText: 'alt text'\n  },\n];\n","import styled from \"styled-components\";\n\nexport const OverlayContainerMask = styled.div`\n  display: block;\n  background-color: #fff;\n  position: fixed;\n  background-color: rgba(0, 0, 0, .4);\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const OverlayContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-width: 75%;\n  min-height: 75%;\n  background-color: #fff;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 22px;\n`;\n\nexport const OverlayTitle = styled.p`\n  font-size: 22px;\n  color: #000;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport const OverlayPoints = styled.p`\n  font-size: 28px;\n  color: ${({ winner }) => (winner ? '#0f0' : '#f00')};\n`;\n\nexport const OverlayResetButton = styled.button`\n  background: #D15D5B;\n  border: 0;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  color: #fff;\n  margin: 24px 0;\n  padding: 12px 32px;\n  font-weight: 100;\n  font-size: 18px;\n  transition: all .3s ease-in-out;\n  cursor: pointer;\n  opacity: .8;\n\n  &:hover {\n    padding: 12px 42px;\n    box-shadow: 0 10px 20px rgba(0,0,0,0.3), 0 6px 6px rgba(0,0,0,0.6);\n    opacity: 1;\n  }\n`;\n\nexport const OverlayImage = styled.img`\n  max-width: 100%;\n  max-height: 320px;\n  padding: 22px;\n`;\n\nexport const OverlayText = styled.p`\n  color: #000;\n`;\n","import React from 'react';\nimport { prizeStore } from '../../store/prizeStore';\nimport { OverlayContainer, OverlayContainerMask, OverlayImage, OverlayPoints, OverlayResetButton, OverlayText, OverlayTitle } from '../../style/Overlay/overlay';\nimport { getCurrentPrize } from './utils/getCurrentPrize';\n\nconst Overlay = ({\n  gameState,\n  points\n}) => {\n  const imgList = prizeStore;\n  const currPrize = getCurrentPrize(imgList, points)?.[0];\n\n  const onResetButtonClick = () => {\n    window.location.reload();\n  }\n\n  return (\n    !gameState && \n      <OverlayContainerMask>\n        <OverlayContainer>\n          <OverlayTitle>\n            { points ? 'YOU WIN' : 'YOU LOOSE'}\n          </OverlayTitle>\n          <OverlayPoints winner={points}>\n            Your score is { points } points\n          </OverlayPoints>\n          {currPrize?.url && currPrize?.altText &&\n            <OverlayImage src={currPrize?.url} alt={currPrize?.altText} />\n          }\n          {currPrize?.text &&\n            <OverlayText>\n              {currPrize?.text}\n            </OverlayText>\n          }\n          <OverlayResetButton onClick={onResetButtonClick}>\n            RESET\n          </OverlayResetButton>\n        </OverlayContainer>\n      </OverlayContainerMask>\n  );\n};\n\nexport default Overlay;\n","export const getCurrentPrize = (imgList, points) => (\n  imgList.filter((img) => points >= img.min && points <= img.max && img\n));\n","import styled from \"styled-components\"\n\nexport const PointsText = styled.p`\n  font-size: 22px;\n  font-weight: 600;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 12px 0;\n  background: #2C415A;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  position: sticky;\n  top: 0;\n`;\n","import React from 'react';\nimport { PointsText } from '../../style/Points/points';\n\nconst Points = ({\n  points\n}) => {\n  return (\n    <PointsText>\n      Score: {points}\n    </PointsText>\n  );\n};\n\nexport default Points;\n","export const questionsStore = [\n  {\n    title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. 1',\n    answers: [\n      'False',\n      'False',\n      'True',\n      'False'\n    ],\n    correctAnswerIndex: 3 //Function checks index of correct answer + 1 (as if the array started with 1)\n  },\n  {\n    title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. 2',\n    answers: [\n      'False',\n      'True',\n      'False',\n      'False'\n    ],\n    correctAnswerIndex: 2 //Function checks index of correct answer + 1 (as if the array started with 1)\n  },\n  {\n    title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. 3',\n    answers: [\n      'False',\n      'False',\n      'False',\n      'True'\n    ],\n    correctAnswerIndex: 4 //Function checks index of correct answer + 1 (as if the array started with 1)\n  }\n];\n","import styled from \"styled-components\";\n\nexport const QuestionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 700px;\n  padding: 44px 22px;\n`;\n\nexport const QuestionsTitle = styled.h2`\n  margin-bottom: 32px;\n  font-weight: 600;\n  text-shadow: 2px 2px 4px rgba(50, 50, 50, .8);\n`;\n\nexport const QuestionsWrapper = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const QuestionsItem = styled.li`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const QuestionButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  padding: 16px 24px;\n  background-color: #fff;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  color: #000;\n  width: 100%;\n  margin: 0 auto;\n  margin-bottom: 32px;\n  max-width: 320px;\n  font-size: 18px;\n  text-align: left;\n  opacity: 1;\n  transition: all .3s ease-in-out;\n  background: #fff;\n\n  &:hover {\n    opacity: .6;\n  }\n`;\n\nexport const QuestionsListLength = styled.p`\n  text-align: center;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport {\n  questionsStore\n} from '../../store/questionsStore';\nimport { QuestionButton, QuestionsContainer, QuestionsItem, QuestionsListLength, QuestionsTitle, QuestionsWrapper } from '../../style/Questions/questions';\n\nconst Questions = ({\n  setPointsClick,\n  setSlideClick,\n  slideIndex,\n  setBackgroundColor\n}) => {\n  const questionsList = questionsStore;\n  const onAnswerClick = (answer, correctAnswerIndex, index) => {\n    setBackgroundColor(answer + 1 === correctAnswerIndex ? '#4EC290' : '#D15D5B');\n\n    setTimeout(() => {\n      if (answer + 1 === correctAnswerIndex) {\n        setPointsClick();\n        setSlideClick(index, questionsList.length);\n      } else {\n        setSlideClick(index, questionsList.length);\n      }\n      setBackgroundColor(false);\n    }, 1000);\n  }\n\n  return (\n    <QuestionsContainer>\n      {\n        questionsList.map(({ title, answers, correctAnswerIndex }, index) => (\n          index === slideIndex &&\n            <QuestionsWrapper key={title + index}>\n              <QuestionsTitle>{index + 1}. { title }</QuestionsTitle>\n              {\n                answers.map((answer, i) => (\n                  <QuestionsItem key={answer + i}>\n                    <QuestionButton\n                      onClick={() => onAnswerClick(i, correctAnswerIndex, index)}\n                    >\n                      {i + 1}. {answer}\n                    </QuestionButton>\n                  </QuestionsItem>\n                ))\n              }\n            <QuestionsListLength>\n              {index + 1}/{questionsList.length}\n            </QuestionsListLength>\n            </QuestionsWrapper>\n        ))\n      }\n    </QuestionsContainer>\n  )\n};\n\nexport default Questions;","import styled from \"styled-components\";\n\nexport const MainViewContainer = styled.div`\n   background: ${({ color }) => color};\n   min-height: 100vh;\n   transition: all .3s ease-in-out;\n`;\n","import React, { useState } from 'react';\nimport Overlay from '../../components/overlay/Overlay';\nimport Points from '../../components/points/Points';\nimport Questions from '../../components/questions/Questions';\nimport { pointsPerQuestion } from '../../store/prizeStore';\nimport { MainViewContainer } from '../../style/MainView/mainView';\n\nconst MainView = () => {\n  const [currPoints, setPoints] = useState(0);\n  const [currSlide, setSlide] = useState(0);\n  const [gameState, setGameState] = useState(true);\n  const [isWinner, setIsWinner] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState('#252A3F');\n\n  const onSetPointsClick = () => {\n    setPoints(currPoints + pointsPerQuestion);\n  };\n\n  const onSetSlideClick = (slideIndex, maxLength) => {\n    if (slideIndex + 1 === maxLength) {\n      setIsWinner(true);\n      setGameState(false);\n    } else {\n      setSlide(slideIndex + 1);\n    }\n  };\n\n  const onSetBackgroundColor = (color) => {\n    setBackgroundColor(color ? color : '#252A3F');\n  };\n\n  return (\n    <MainViewContainer color={backgroundColor}>\n      <Points points={currPoints} />\n      <Questions\n        setPointsClick={onSetPointsClick}\n        setSlideClick={onSetSlideClick}\n        slideIndex={currSlide}\n        setBackgroundColor={onSetBackgroundColor}\n      />\n      <Overlay\n        gameState={gameState}\n        points={currPoints}\n        winner={isWinner}\n      />\n    </MainViewContainer>\n  );\n};\n\nexport default MainView;\n","import MainView from \"./views/main-view/MainView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}